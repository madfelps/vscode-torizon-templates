# ARGUMENTS --------------------------------------------------------------------
##
# Board architecture
##
ARG IMAGE_ARCH=
# For armv7 use:
#ARG IMAGE_ARCH=arm

##
# Base container version
##
ARG BASE_VERSION=2.5-bullseye

##
# Application Name
##
ARG APP_EXECUTABLE=app

# BUILD ------------------------------------------------------------------------
##

# Deploy Step
##
FROM --platform=linux/${IMAGE_ARCH} \
    torizon/debian:${BASE_VERSION} AS Debug


ARG IMAGE_ARCH
ARG APP_EXECUTABLE
ENV APP_EXECUTABLE ${APP_EXECUTABLE}

EXPOSE 2345
# SSH for remote debug
EXPOSE 2299
ARG SSHUSERNAME=torizon

# Make sure we don't get notifications we can't answer during building.
ENV DEBIAN_FRONTEND="noninteractive"

#GENERALIZAR AQUI
COPY ./main ./home/torizon


# your regular RUN statements here
# Install required packages
RUN apt-get -q -y update && \
    apt-get -q -y install \
    openssl \
    golang-go \
    openssh-server \
    rsync \
    file \
    curl \
    screen \
    gdb && \
    apt-get clean && apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

USER torizon
WORKDIR /home/torizon 
RUN go mod init app
RUN go get github.com/go-delve/delve/cmd/dlv@latest
WORKDIR /
USER root

# ⚠️ DEBUG PURPOSES ONLY!!
# copies RSA key to enable SSH login for user
COPY .conf/id_rsa.pub /id_rsa.pub

# create folders needed for the different components
# configures SSH access to the container and sets environment by default
RUN mkdir /var/run/sshd && \
    sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' \
    -i /etc/pam.d/sshd && \
    if test $SSHUSERNAME != root ; \
    then mkdir -p /home/$SSHUSERNAME/.ssh ; \
    else mkdir -p /root/.ssh ; fi && \
    if test $SSHUSERNAME != root ; \
    then cp /id_rsa.pub /home/$SSHUSERNAME/.ssh/authorized_keys ; \
    else cp /id_rsa.pub /root/.ssh/authorized_keys ; fi && \
    echo "PermitUserEnvironment yes" >> /etc/ssh/sshd_config && \
    echo "Port 2299" >> /etc/ssh/sshd_config && \
    su -c "env" $SSHUSERNAME > /etc/environment

RUN rm -r /etc/ssh/ssh*key && \
    dpkg-reconfigure openssh-server

CMD [ "/usr/sbin/sshd", "-D" ]
